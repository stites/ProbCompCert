#!/usr/bin/env bash
set -euo pipefail

# store some directory variables.
current_dir=$PWD
root_dir=$(git rev-parse --show-toplevel)
stan_dir=$root_dir/stanfrontend

# store the name of the program
prog=${1##*/}
name=${prog%.*}

function universal-abspath() {
  perl -MCwd -e 'print Cwd::abs_path shift' "$1"
}

parent_dir="$(dirname -- "$(universal-abspath "$1")")"

cd $root_dir

function echo_and_run {
    echo $@
    $@
}

# working directory is stan dir
cd stanfrontend


## ccomp doesn't compile down to object files, just asm
echo_and_run ccomp -dc -dclight -g3 -c $parent_dir/$name.stan && ccomp -c ${name}.s || exit 1

# compile generated printing functions
echo_and_run ccomp -g3 -I${stan_dir} -c ${parent_dir}/${name}_prelude.c

# build stanlib.o
echo_and_run ccomp -g3 -lm -c stanlib.c

# compile generated printing functions
echo_and_run ccomp -g3 -I${stan_dir} -c ${parent_dir}/${name}_runtime.c

# compile the final binary
echo_and_run ccomp -g3 -L${stan_dir} -L../out/lib/compcert stanlib.o ${name}_prelude.o ${name}.o ${name}_runtime.o -lm -o runit

# tell the user what to do next
echo "compiled! ./stanfrontend/runit INT"

